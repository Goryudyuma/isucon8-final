worker_processes 2;
daemon off;
events {
    worker_connections  10240;
}
http {
    default_type  application/octet-stream;
    sendfile      on;

    log_format ltsv "time:$time_iso8601"
                "\thost:$remote_addr"
                "\tport:$remote_port"
                "\treq:$request"
                "\tstatus:$status"
                "\tsize:$body_bytes_sent"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\truntime:$upstream_http_x_runtime"
                "\tupstream:$upstream_addr";
    error_log /dev/stdout info;
    access_log /dev/stdout ltsv;

    limit_conn_zone $http_authorization zone=conn_logger:10m;
    limit_req_zone  $http_authorization zone=req_logger:10m rate=5r/s;

    upstream isubank {
      server isubank:5515;
      keepalive 32;
    }

    upstream logger {
      server logger:5516;
      keepalive 32;
    }

    server {
      listen 5515 ssl http2;
      ssl_certificate /etc/nginx/_.isucon8.flying-chair.net.crt;
      ssl_certificate_key /etc/nginx/_.isucon8.flying-chair.net.key;
      location / {
        proxy_pass http://isubank;
      }
    }

    server {
      listen 5516 ssl http2;
      ssl_certificate /etc/nginx/_.isucon8.flying-chair.net.crt;
      ssl_certificate_key /etc/nginx/_.isucon8.flying-chair.net.key;
      location / {
        # 503 になったらコネクションを切ってTLS接続からやり直し
        header_filter_by_lua_block {
          if ngx.status == ngx.HTTP_SERVICE_UNAVAILABLE then
            ngx.header["Connection"] = {'close'}
          end
        }

        limit_conn conn_logger 5;
        limit_req zone=req_logger burst=1 nodelay;
        proxy_pass http://logger;
      }
    }
}
